{"ast":null,"code":"var _jsxFileName = \"/Users/owl/Documents/GitHub/causality/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useState, useRef } from 'react';\nimport Draggable from 'react-draggable';\nimport ReactDOM from 'react-dom/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Change events to objects with a label and y position\n  const [fixedEvents, setFixedEvents] = useState([{\n    label: 'Event 1'\n  }, {\n    label: 'Event 2'\n  }, {\n    label: 'Event 3'\n  }]);\n  const timelineRef = useRef(null);\n\n  // baseY should be the y position of the first event; it's the middle of the timeline\n  const [baseY, setBaseY] = useState(0);\n  const eventSpacing = 70; // Adjust spacing as needed\n\n  React.useEffect(() => {\n    if (timelineRef.current) {\n      setBaseY(timelineRef.current.offsetHeight / 2 - eventSpacing * fixedEvents.length / 2);\n    }\n  }, []);\n  const mapIndexToY = index => {\n    return baseY + index * eventSpacing; // Adjust spacing as needed\n  };\n  const [draggablePosition, setDraggablePosition] = useState({\n    x: 0,\n    y: 0\n  });\n  const draggableRef = useRef(null);\n\n  // calculate the index of the draggable event based on its y position\n  const getFullTimelineIncludingProspectiveEvent = () => {\n    if (!!timelineRef.current && draggablePosition.x - (timelineRef.current.offsetLeft + timelineRef.current.width) / 2 > 20) {\n      console.log(\"Draggable event position is\", draggablePosition);\n      console.log(\"Timeline offset is\", timelineRef.current.offsetLeft);\n      return fixedEvents;\n    }\n    const index = Math.floor((draggablePosition.y - baseY) / eventSpacing);\n    const prospectiveEvent = {\n      label: 'Prospective Event',\n      type: 'prospective',\n      y: draggablePosition.y\n    };\n    const fullTimeline = [...fixedEvents];\n    if (index >= 0 && index < fullTimeline.length) {\n      fullTimeline.splice(index, 0, prospectiveEvent);\n    } else if (index === fullTimeline.length) {\n      fullTimeline.push(prospectiveEvent);\n    }\n    return fullTimeline;\n  };\n  const handleStop = (e, data) => {\n    // reset the draggable, add the event to the timeline\n    const index = Math.floor((data.y - baseY) / eventSpacing);\n    const newEvent = {\n      label: 'New Event',\n      //type: 'prospective',\n      y: data.y\n    };\n    const fullTimeline = [...fixedEvents];\n    if (index >= 0 && index < fullTimeline.length) {\n      fullTimeline.splice(index, 0, newEvent);\n    } else if (index === fullTimeline.length) {\n      fullTimeline.push(newEvent);\n    }\n    setFixedEvents(fullTimeline);\n    setDraggablePosition({\n      x: 0,\n      y: 0\n    });\n    setBaseY(timelineRef.current.offsetHeight / 2 - eventSpacing * fullTimeline.length / 2);\n    console.log(\"New event added to timeline\", newEvent);\n    console.log(\"New timeline is\", fullTimeline);\n    console.log(\"New baseY is\", baseY);\n    console.log(\"New draggable position is\", draggablePosition);\n    console.log(\"New timeline offset is\", timelineRef.current.offsetLeft);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    style: {\n      display: 'flex',\n      flexDirection: 'row',\n      height: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 1,\n        display: 'flex',\n        flexDirection: 'column'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        style: {\n          textAlign: 'center',\n          padding: '20px',\n          backgroundColor: '#282c34',\n          color: 'white'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Timeline of Events\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        style: {\n          position: 'relative',\n          height: '100%',\n          overflow: 'hidden'\n        },\n        ref: timelineRef,\n        children: getFullTimelineIncludingProspectiveEvent().map((event, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'absolute',\n            top: `${mapIndexToY(index)}px`,\n            left: 'calc(50% - 100px)',\n            width: '200px',\n            padding: '10px',\n            margin: '10px 0',\n            backgroundColor: event.type === 'prospective' ? '#f8d7da' : '#e2e3e5',\n            border: '1px solid #ccc',\n            borderRadius: '5px',\n            textAlign: 'center'\n          },\n          children: event.label\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '200px',\n        padding: '20px',\n        backgroundColor: '#f9f9f9',\n        borderLeft: '1px solid #ccc'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: \"Draggable Event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Draggable, {\n        nodeRef: draggableRef,\n        position: draggablePosition,\n        onDrag: (e, data) => {\n          setDraggablePosition({\n            x: data.x,\n            y: data.y\n          });\n        },\n        onStop: handleStop\n        //onDrag={(e, data) => handleDrag({ x: data.x, y: data.y })}\n        ,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: draggableRef,\n          style: {\n            width: '150px',\n            padding: '10px',\n            backgroundColor: '#d1e7dd',\n            border: '1px solid #0f5132',\n            borderRadius: '5px',\n            textAlign: 'center',\n            cursor: 'move'\n          },\n          children: \"Drag Me\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"woJBC6tgOz8KWlVx1tG2WI50a8Q=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","Draggable","ReactDOM","jsxDEV","_jsxDEV","App","_s","fixedEvents","setFixedEvents","label","timelineRef","baseY","setBaseY","eventSpacing","useEffect","current","offsetHeight","length","mapIndexToY","index","draggablePosition","setDraggablePosition","x","y","draggableRef","getFullTimelineIncludingProspectiveEvent","offsetLeft","width","console","log","Math","floor","prospectiveEvent","type","fullTimeline","splice","push","handleStop","e","data","newEvent","className","style","display","flexDirection","height","children","flex","textAlign","padding","backgroundColor","color","fileName","_jsxFileName","lineNumber","columnNumber","position","overflow","ref","map","event","top","left","margin","border","borderRadius","borderLeft","nodeRef","onDrag","onStop","cursor","_c","$RefreshReg$"],"sources":["/Users/owl/Documents/GitHub/causality/src/App.js"],"sourcesContent":["import './App.css';\nimport React, { useState, useRef } from 'react';\nimport Draggable from 'react-draggable';\nimport ReactDOM from 'react-dom/client';\n\nfunction App() {\n  // Change events to objects with a label and y position\n  const [fixedEvents, setFixedEvents] = useState([\n    { label: 'Event 1'},\n    { label: 'Event 2'},\n    { label: 'Event 3'},\n  ]);\n\n  const timelineRef = useRef(null);\n\n  // baseY should be the y position of the first event; it's the middle of the timeline\n  const [baseY, setBaseY] = useState(0);\n\n  const eventSpacing = 70; // Adjust spacing as needed\n\n  React.useEffect(() => {\n    if (timelineRef.current) {\n      setBaseY(timelineRef.current.offsetHeight / 2 - eventSpacing * (fixedEvents.length) / 2);\n    }\n  }, []);\n    \n  const mapIndexToY = (index) => {\n    return baseY + index * eventSpacing; // Adjust spacing as needed\n  }\n\n  const [draggablePosition, setDraggablePosition] = useState({ x: 0, y: 0 });\n  const draggableRef = useRef(null);\n\n  // calculate the index of the draggable event based on its y position\n  const getFullTimelineIncludingProspectiveEvent = () => {\n    if(!!timelineRef.current && (draggablePosition.x - (timelineRef.current.offsetLeft + timelineRef.current.width)/2) > 20) {\n      console.log(\"Draggable event position is\", draggablePosition);\n      console.log(\"Timeline offset is\", timelineRef.current.offsetLeft);\n      return fixedEvents;\n    }\n\n    const index = Math.floor((draggablePosition.y - baseY) / eventSpacing);\n    const prospectiveEvent = {\n      label: 'Prospective Event',\n      type: 'prospective',\n      y: draggablePosition.y,\n    };\n    const fullTimeline = [...fixedEvents];\n    if (index >= 0 && index < fullTimeline.length) {\n      fullTimeline.splice(index, 0, prospectiveEvent);\n    } else if (index === fullTimeline.length) {\n      fullTimeline.push(prospectiveEvent);\n    }\n    return fullTimeline;\n\n  };\n\n  const handleStop = (e, data) => {\n    // reset the draggable, add the event to the timeline\n    const index = Math.floor((data.y - baseY) / eventSpacing);\n    const newEvent = {\n      label: 'New Event',\n      //type: 'prospective',\n      y: data.y,\n    };\n    const fullTimeline = [...fixedEvents];\n    if (index >= 0 && index < fullTimeline.length) {\n      fullTimeline.splice(index, 0, newEvent);\n    } else if (index === fullTimeline.length) {\n      fullTimeline.push(newEvent);\n    }\n    setFixedEvents(fullTimeline);\n    setDraggablePosition({ x: 0, y: 0 });\n    setBaseY(timelineRef.current.offsetHeight / 2 - eventSpacing * (fullTimeline.length) / 2);\n    console.log(\"New event added to timeline\", newEvent);\n    console.log(\"New timeline is\", fullTimeline);\n    console.log(\"New baseY is\", baseY);\n    console.log(\"New draggable position is\", draggablePosition);\n    console.log(\"New timeline offset is\", timelineRef.current.offsetLeft);\n  }\n\n  return (\n    <div className=\"App\" style={{ display: 'flex', flexDirection: 'row', height: '100vh' }}>\n      <div style={{ flex: 1, display: 'flex', flexDirection: 'column' }}>\n        <header style={{ textAlign: 'center', padding: '20px', backgroundColor: '#282c34', color: 'white' }}>\n          <h1>Timeline of Events</h1>\n        </header>\n        {/* Set timeline area to relative for absolute event positioning */}\n        <main style={{ position: 'relative', height: '100%', overflow: 'hidden' }} ref={timelineRef}>\n          {getFullTimelineIncludingProspectiveEvent().map((event, index) => (\n            <div key={index} style={{\n                position: 'absolute',\n                top: `${mapIndexToY(index)}px`,\n                left: 'calc(50% - 100px)',\n                width: '200px',\n                padding: '10px',\n                margin: '10px 0',\n                backgroundColor: event.type === 'prospective' ? '#f8d7da' : '#e2e3e5',\n                border: '1px solid #ccc',\n                borderRadius: '5px',\n                textAlign: 'center'\n              }}>\n              {event.label}\n            </div>\n          ))}\n        </main>\n      </div>\n      <div style={{ width: '200px', padding: '20px', backgroundColor: '#f9f9f9', borderLeft: '1px solid #ccc' }}>\n        <h2 style={{ textAlign: 'center' }}>Draggable Event</h2>\n        <Draggable\n          nodeRef={draggableRef}\n          position={draggablePosition}\n          onDrag={(e, data) => {\n            setDraggablePosition({ x: data.x, y: data.y });\n          }}\n          onStop={handleStop}\n          //onDrag={(e, data) => handleDrag({ x: data.x, y: data.y })}\n         >\n          <div ref={draggableRef} style={{\n              width: '150px',\n              padding: '10px',\n              backgroundColor: '#d1e7dd',\n              border: '1px solid #0f5132',\n              borderRadius: '5px',\n              textAlign: 'center',\n              cursor: 'move'\n            }}>\n            Drag Me\n          </div>\n        </Draggable>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}